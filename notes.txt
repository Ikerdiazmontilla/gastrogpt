
cambiar alergias para que no sea necesario seleccionar nada ahi

(Si no aceptan las cookies se puede hacer un fallback a localstorage o se le puede inhabilitar el uso del chat o que salte un banner diciendo que tienen las cookies desactivadas)

when you click on a dish, add ask chat about the dish functionality

Remove searchbar to add filtering by healthy or by spicy, or by vegan


For stt in spanish:
https://www.speechmatics.com/

also see this https://github.com/ufal/whisper_streaming

real time voice chat example
http://github.com/KoljaB/RealtimeVoiceChat

also look at this:
https://www.chat-data.com/blog/create-your-own-realtime-voice-to-voice-ai-chatbot-with-code-examples

AND THIS:
https://github.com/iamNilotpal/talky-frontend


Poner un dialogo explicando como funciona cuando te metes

reduce temperature

Add more languages

On mobile when you try to chat it scrolls down too much, fix it
Change styles for different viewports



react.render is deprecated
onkey press is deprecated

Add selection of best dishes from the restaurant and prioritize those.
Improve prompt instructions
Asegurarse que las instrucciones funcionan bien


Marketing: 
make offer to refund money
Establish prices
Maintenance fee
Could charge them a fixed price or give them the option to handle their own token expense.



<button onClick={handleReset} className="reset-button">Reiniciar</button>
<h2> <a href='/chat'> GastroGPT</a></h2>



put navbar in position fixed with javascript
If you **donâ€™t know the height** of the element in advance but still want to **preserve its space** in the document **and** have it behave as `position: fixed`, you can do this with JavaScript.

### Working solution:

```html
<div id="placeholder">
  <div id="fixed-element">
    <!-- dynamic content here -->
  </div>
</div>
```

```css
#fixed-element {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
}
```

```js
const fixed = document.getElementById('fixed-element');
const placeholder = document.getElementById('placeholder');

function syncHeight() {
  placeholder.style.height = `${fixed.offsetHeight}px`;
}

window.addEventListener('load', syncHeight);
window.addEventListener('resize', syncHeight);
```

### What this does:

* The `#placeholder` remains in the document flow and takes up the same height as the fixed element.
* The `#fixed-element` is pulled out of flow but its size is copied into the placeholder using JavaScript.

This is the only clean way to make it work when the height is dynamic and unknown at CSS time.

Do you want it to work if the content changes dynamically after load (e.g. animations, expanding sections)?
